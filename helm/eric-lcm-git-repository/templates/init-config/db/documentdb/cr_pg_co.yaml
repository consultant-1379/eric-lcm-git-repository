#
# COPYRIGHT Ericsson 2024
#
#
#
# The copyright to the computer program(s) herein is the property of
#
# Ericsson Inc. The programs may be used and/or copied only with written
#
# permission from Ericsson Inc. or in accordance with the terms and
#
# conditions stipulated in the agreement/contract under which the
#
# program(s) have been supplied.
{{ $global := fromYaml ( include "eric-lcm-git-repository.global" . ) -}}
{{- if and (eq .Values.gitea.config.database.DB_TYPE "postgres") (.Values.documentDatabasePG.customObject.enabled) ($global.documentDatabasePG.operator.enabled) }}
apiVersion: docdb.data.ericsson.com/v1beta1
kind: DocumentDB
metadata:
  name: {{ .Values.documentDatabasePG.customObject.instanceName }}
  labels:
    {{- include "eric-lcm-git-repository.labels" . | nindent 4 }}
  annotations:
    {{- $commonAnn := include "eric-lcm-git-repository.annotations" . | fromYaml }}
    {{- $hookAnn := dict -}}
    {{- $_ := set $hookAnn "helm.sh/hook" "pre-install" -}}
    {{- $_ := set $hookAnn "helm.sh/hook-delete-policy" "before-hook-creation" -}}
    {{- $_ := set $hookAnn "helm.sh/hook-weight" "1" -}}
    {{- include "eric-lcm-git-repository.mergeAnnotations" (dict "location" (.Template.Name) "sources" (list $commonAnn $hookAnn)) | trim | nindent 4 }}
spec:
  instanceName: {{ .Values.documentDatabasePG.customObject.instanceName }}
  {{- if .Values.documentDatabasePG.customObject.backupRestore.enabled }}
  backupRestore:
    logicalDbDataSets:
      - name: GITEA
        configMapRef: {{ template "eric-lcm-git-repository.dataDocumentPG.coBrAgent" . }}
  {{- end }}
  replicas: {{ .Values.documentDatabasePG.customObject.replicaCount }}
  log:
    level: {{ .Values.documentDatabasePG.customObject.log.level | quote | lower }}
    streamingMethod: {{ .Values.documentDatabasePG.customObject.log.streamingMethod | quote | lower }}
  logicalDatabase:
    datasourceForMetrics: {{ .Values.gitea.config.database.NAME | quote }}
  metrics:
    enabled: {{ .Values.documentDatabasePG.customObject.metrics.enabled }}
  databaseServerConfig:
    authentication:
      mode: {{ .Values.documentDatabasePG.customObject.databaseServerConfig.authentication.mode | quote }}
      passwordsSecretReference: {{ .Values.documentDatabasePG.customObject.databaseServerConfig.authentication.passwordsSecretReference | quote }}
    {{- if .Values.documentDatabasePG.customObject.databaseServerConfig.settings }}
    settings: {{ .Values.backend.documentDatabasePG.customObject.databaseServerConfig.settings | toYaml | nindent 6 }}
    {{- end }}
  resources:
    flavor: {{ .Values.documentDatabasePG.customObject.resources.flavor | quote }}
    persistentStorage:
      {{- if .Values.documentDatabasePG.customObject.resources.persistentStorage.housekeepingThresholdPercentage }}
      housekeepingThresholdPercentage: {{ default 100 .Values.documentDatabasePG.customObject.resources.persistentStorage.housekeepingThresholdPercentage }}
      {{- end }}
      documentDatabasePGVolume:
        persistentVolumeClaim:
          size: {{ .Values.documentDatabasePG.customObject.resources.persistentStorage.documentDatabasePGVolume.persistentVolumeClaim.size | quote }}
          {{- if .Values.documentDatabasePG.customObject.resources.persistentStorage.documentDatabasePGVolume.persistentVolumeClaim.storageClassName }}
          storageClassName: {{ .Values.documentDatabasePG.customObject.resources.persistentStorage.documentDatabasePGVolume.persistentVolumeClaim.storageClassName | quote }}
          {{- end }}
{{- end -}}